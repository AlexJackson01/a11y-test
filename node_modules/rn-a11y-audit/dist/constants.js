"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.nestingError = exports.stateError = exports.touchableHintError = exports.imageLabelError = exports.touchableLabelError = exports.viewLabelError = exports.nestingCode = exports.stateCode = exports.roleCode = exports.hintCode = exports.labelCode = exports.ariaStates = exports.stateMap = exports.roleMap = exports.ALL_ROLES = exports.touchables = void 0;
exports.touchables = [
    "TouchableOpacity",
    "TouchableHighlight",
    "TouchableWithoutFeedback",
    "Pressable",
    "Button",
    "Touchable",
];
exports.ALL_ROLES = new Set([
    "adjustable",
    "alert",
    "button",
    "checkbox",
    "combobox",
    "grid",
    "header",
    "image",
    "imagebutton",
    "keyboardkey",
    "link",
    "list",
    "menu",
    "menubar",
    "menuitem",
    "none",
    "progressbar",
    "radio",
    "radiogroup",
    "scrollbar",
    "search",
    "spinbutton",
    "summary",
    "switch",
    "tab",
    "tablist",
    "text",
    "timer",
    "togglebutton",
    "toolbar",
]);
// Role mapping
exports.roleMap = {
    // touchables as button
    TouchableOpacity: "button",
    TouchableHighlight: "button",
    TouchableWithoutFeedback: "button",
    Pressable: "button",
    Touchable: "button",
    // native/common
    Image: "image",
    Switch: "switch",
    ActivityIndicator: "progressbar",
    FlatList: "list",
    SectionList: "list",
    // likely custom names
    Alert: "alert",
    Toast: "alert",
    Checkbox: "checkbox",
    Radio: "radio",
    RadioGroup: "radiogroup",
    Picker: "combobox",
    Dropdown: "combobox",
    Slider: "adjustable",
    Carousel: "adjustable",
    Search: "search",
    ProgressBar: "progressbar",
    Header: "header",
    Title: "header",
    Tab: "tab",
    Toolbar: "toolbar",
    Menu: "menu",
    Toggle: "togglebutton",
    Summary: "summary",
    Timer: "timer",
    Link: "link",
    Grid: "grid",
};
// State mapping
exports.stateMap = {
    Switch: "checked",
    Checkbox: "checked",
    Accordion: "expanded",
    BottomSheet: "expanded",
    Radio: "selected",
    Picker: "expanded",
    Dropdown: "expanded",
    Toggle: "checked",
};
exports.ariaStates = ["aria-checked", "aria-expanded", "aria-selected"];
// Error messages
exports.labelCode = "@RN-AUDIT-LABEL";
exports.hintCode = "@RN-AUDIT-HINT";
exports.roleCode = "@RN-AUDIT-ROLE";
exports.stateCode = "@RN-AUDIT-STATE";
exports.nestingCode = "@RN-AUDIT-NESTING";
exports.viewLabelError = `${exports.labelCode}: Add an accessibilityLabel to your accessible View`;
exports.touchableLabelError = `${exports.labelCode}: Add an accessibilityLabel`;
exports.imageLabelError = `${exports.labelCode}: Add an accessibilityLabel and alt text to your Image`;
exports.touchableHintError = `${exports.hintCode}: Add an accessibilityHint`;
exports.stateError = `${exports.stateCode}: Add an accessibilityState`;
exports.nestingError = `${exports.nestingCode}: <View accessible> wraps interactive elements (e.g., Pressable/Touchable) and they are not reachable by screen readers. Consider removing "accessible" or moving the elements outside of the View.`;
//# sourceMappingURL=constants.js.map
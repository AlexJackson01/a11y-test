"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.auditAccessibilityStates = void 0;
const constants_1 = require("../../constants");
const hasProp_1 = require("../hasProp");
const suggestState_1 = require("./suggestState");
const suggestRole_1 = require("../accessibilityRole/suggestRole");
const auditAccessibilityStates = (tag, attributes, path, filePath, prComments, options) => {
    if (suggestState_1.NON_INTERACTIVE.has(tag))
        return;
    const topLevel = (0, suggestRole_1.isTopLevelJSX)(path);
    const filenameState = topLevel ? (0, suggestState_1.inferFromFilename)(options?.filePath ?? filePath) : null;
    const tagState = (0, suggestState_1.inferFromTag)(tag);
    const stateKey = filenameState ?? tagState;
    if (!stateKey)
        return;
    if (filenameState &&
        topLevel &&
        options?.perFile &&
        options.perFile.seededFirstLayer === false) {
        const line = path.node.loc?.start.line || 0;
        prComments.push({
            type: "accessibilityState",
            tag,
            line,
            text: `${constants_1.stateCode}: Add an accessibilityState to ${filePath}. Suggested: accessibilityState={{ ${stateKey}: ... }}.`,
            location: filePath,
        });
        options.perFile.seededFirstLayer = true;
        return;
    }
    if ((0, hasProp_1.hasProp)('accessibilityState', attributes) || (0, suggestState_1.hasAriaState)(attributes, stateKey))
        return;
    const line = path.node.loc?.start.line || 0;
    const suggestion = `${constants_1.stateCode}: <${tag}> on line ${line} is missing an accessibilityState. Suggested: accessibilityState={{ ${stateKey}: ... }}.`;
    prComments.push({
        type: "accessibilityState",
        tag,
        line,
        text: suggestion,
        location: filePath,
    });
};
exports.auditAccessibilityStates = auditAccessibilityStates;
//# sourceMappingURL=auditAccessibilityStates.js.map
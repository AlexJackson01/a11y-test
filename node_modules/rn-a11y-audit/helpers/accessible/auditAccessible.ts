import * as t from "@babel/types";
import type { NodePath } from "@babel/traverse";
import { nestingError, touchables } from "../../constants";
import { hasInteractiveDescendant, isAccessibleTrue } from "./utils";

export function auditAccessible(
  tag: string,
  attributes: (t.JSXAttribute | t.JSXSpreadAttribute)[],
  path: NodePath<t.JSXElement>,
  filePath: string,
  prComments: any[]
) {
  if (tag !== "View") return;

  if (!isAccessibleTrue(attributes) || !hasInteractiveDescendant(path)) return;

  const line = path.node.loc?.start.line || 0;
  prComments.push({
    type: "accessible",
    tag: "View",
    line,
    text: nestingError,
    location: filePath,
  });
}

import * as t from "@babel/types";
import { auditImageLabels } from "./auditImageLabels";

const createPath = (attributes: (t.JSXAttribute | t.JSXSpreadAttribute)[]) =>
  ({
    node: {
      openingElement: {
        attributes,
      },
    },
  } as any);

describe("auditImageLabels", () => {
  it("returns null if accessibilityLabel exists", () => {
    const path = createPath([
      t.jsxAttribute(t.jsxIdentifier("accessibilityLabel"), t.stringLiteral("A cat image")),
    ]);

    const result = auditImageLabels(path.node.openingElement.attributes, path);
    expect(result).toBeNull();
  });

  it("returns label based on alt attribute", () => {
    const path = createPath([
      t.jsxAttribute(t.jsxIdentifier("alt"), t.stringLiteral("Mountain landscape")),
    ]);

    const result = auditImageLabels(path.node.openingElement.attributes, path);
    expect(result).toEqual({
      line: 0,
      tag: "Image",
      path,
      text: "Mountain landscape",
    });
  });

  it("returns default label if no alt or accessibilityLabel", () => {
    const path = createPath([]);

    const result = auditImageLabels(path.node.openingElement.attributes, path);
    expect(result?.text).toMatch(/@RN-AUDIT-LABEL: Add an accessibilityLabel and alt text to your Image/);
  });
});

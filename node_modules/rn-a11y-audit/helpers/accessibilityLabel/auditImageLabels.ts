import * as t from "@babel/types";
import { hasProp } from "../hasProp";
import { LabelTargets } from "../../types";
import { NodePath } from "@babel/traverse";
import { imageLabelError } from "../../constants";

export const auditImageLabels = (
  attributes: (t.JSXAttribute | t.JSXSpreadAttribute)[],
  path: NodePath<t.JSXElement>
): LabelTargets | null => {
  if (hasProp("accessibilityLabel", attributes)) return null;

  const altAttr = attributes.find(
    (attr): attr is t.JSXAttribute & { value: t.StringLiteral } =>
      t.isJSXAttribute(attr) &&
      t.isJSXIdentifier(attr.name) &&
      attr.name.name === "alt"
  );

  const extractedText = altAttr
    ? altAttr.value.value
    : imageLabelError;

  return {
    tag: "Image",
    path,
    line: path.node.loc?.start.line || 0,
    text: extractedText,
  };
};

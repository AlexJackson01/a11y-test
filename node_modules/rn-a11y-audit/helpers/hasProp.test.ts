import * as t from "@babel/types";
import { hasProp } from "./hasProp";

describe("hasProp helper", () => {
  it("returns true if attribute with given name exists", () => {
    const attributes = [
      t.jsxAttribute(t.jsxIdentifier("accessibilityLabel"), t.stringLiteral("label")),
      t.jsxAttribute(t.jsxIdentifier("title"), t.stringLiteral("Title here")),
    ];
    expect(hasProp("title", attributes)).toBe(true);
    expect(hasProp("accessibilityLabel", attributes)).toBe(true);
  });

  it("returns false if attribute with given name does not exist", () => {
    const attributes = [
      t.jsxAttribute(t.jsxIdentifier("accessibilityLabel"), t.stringLiteral("label")),
    ];
    expect(hasProp("title", attributes)).toBe(false);
  });

  it("ignores spread attributes", () => {
    const spreadAttr = t.jsxSpreadAttribute(t.identifier("props"));
    const attributes = [
      spreadAttr,
      t.jsxAttribute(t.jsxIdentifier("title"), t.stringLiteral("Title here")),
    ];
    expect(hasProp("title", attributes)).toBe(true);
  });

  it("returns false for empty attributes", () => {
    expect(hasProp("any", [])).toBe(false);
  });
});
